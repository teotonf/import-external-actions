name: Import external repository
run-name: Import ðŸš€

on:
  workflow_dispatch:
    inputs:
      private_key_location:
        description: Location of the private key to access GH.
        type: string
        default:  /tmp/tf-output/gh-ssh-key
      private_email:
        description: Associated email
        type: string
      gh_repo_name:
        description: Name of the new repository
        type: string
        required: true
      gh_repo_owner:
        description: Name of the new repository
        type: string
        default: ${{ github.repository_owner }}
      gh_repo_description:
        description: Description of the new repository
        type: string
        required: true
      gh_visibilty:
        description: Visibility of the new repository
        type: string
        default: private
      external_repo_url:
        description: URL of the external repository
        type: string
        required: true
      external_repo_user:
        description: User to access the external repository
        type: string
      external_repo_ssh_key_location:
        description: User to access the external repository
        type: string
        required: true
      external_host:
        description: Full path for directory of private key file to access GH 
        required: true
      import_external_repo:
        description: Import external repository
        type: boolean
        required: false
        default: true
      create_repo:
        description: True to create the repository, false to just see the Terraform plan
        type: boolean
        required: true
        default: false
      remove_repo:
        description: True to already create the repository, false to just see the Terraform plan
        type: boolean
        required: true
        default: false
      gh_username:
        description: Github username
      gh_repo_address:
        description: Github repository address to import to

jobs:
  configure-gh-repository:
    runs-on: ubuntu-latest
    if: ${{ inputs.create_repo == true || inputs.create_repo == 'true' || inputs.remove_repo == true || inputs.remove_repo == 'true' }}
    outputs:
      new_repo_url: ${{  steps.tf-plan.outputs.new_repo_url }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v1

      - name: Configure ssh key
        uses: ./.github/actions/generate-ssh-key
        with:
          key_location: ${{ inputs.private_key_location }}
          key_password: ${{ secrets.gh_ssh_key_password }}
          email: ${{ inputs.private_email }}

      - name: Terraform Init / Plan / Apply
        id: tf-plan
        uses: ./.github/actions/configure-gh-repo
        with:
          tf_state_out: "/tmp/import-tf-state"
          repository_name: ${{ inputs.gh_repo_name }}
          repository_owner: ${{ inputs.gh_repo_owner }}
          gh_token: ${{ secrets.gh_token }}
          gh_repo_description: ${{ inputs.gh_repo_description }}
          gh_repo_visibility: ${{ inputs.gh_visibilty }}
          gh_pub_key_location: "${{ inputs.private_key_location }}.pub"
          create_repo: ${{ inputs.create_repo }}
          remove_repo: ${{ inputs.remove_repo }}

  import-to-gh-repository:
    needs: [ configure-gh-repository ]
    if: ${{ always() }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v1

      - name: Configure env for GH address
        if: ${{ inputs.create_repo == false || inputs.create_repo == 'false' }}
        run: echo "new_repo_url=${{ steps.tf-plan.outputs.new_repo_url }}" >> $GITHUB_ENV

      - name: Clone external repository 
        uses: ./.github/actions/download-external-repo
        if: ${{ inputs.import_external_repo == true || inputs.import_external_repo == 'true' }}
        id: clone-repo
        with:
          host: ${{ inputs.external_host }}
          repository_address: ${{ inputs.external_repo_url }}
          private_key_location: ${{ inputs.external_repo_ssh_key_location }}
          key_file_password: ${{ secrets.external_repo_ssh_key_password }}
          username: ${{ inputs.external_repo_user }}
          password: ${{ secrets.external_repo_password }}

      - name: GH address from create repo
        if: ${{ inputs.create_repo == true || inputs.create_repo == 'true' }}
        run: echo "new_repo_url=${{ needs.configure-gh-repository.outputs.new_repo_url }}" >> $GITHUB_ENV

      - name: GH address from inputs
        if: ${{ inputs.create_repo != true && inputs.create_repo != 'true' }}
        run: echo "new_repo_url=${{ inputs.gh_repo_address }}" >> $GITHUB_ENV

      - name: Upload new repository to GH
        uses: ./.github/actions/upload-repo
        if: ${{ inputs.import_external_repo == true || inputs.import_external_repo == 'true' }}
        with:
          repo_location: ${{ steps.clone-repo.outputs.repo_location }}
          gh_token: ${{ secrets.gh_token }}


